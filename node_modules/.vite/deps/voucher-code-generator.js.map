{
  "version": 3,
  "sources": ["../../voucher-code-generator/voucher_codes.js"],
  "sourcesContent": ["/**\n * Copyright 2015 rspective (http://rspective.com)\n * All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n;(function() {\n    \"use strict\";\n\n    var root = this;\n\n    function randomInt(min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    function randomElem(arr) {\n        return arr[randomInt(0, arr.length - 1)];\n    }\n\n    /*  Example:\n\n        config.charset = \"0123456789\"\n        config.charset.length = 10\n        config.pattern = \"##\"\n        config.length = 2\n\n        for first # sign charIndex = 0\n        sequenceOffset = 0)   Math.floor(0  / Math.pow(10, 1)) % 10  ->  Math.floor(0  / 10) % 10  ->  0\n        sequenceOffset = 2)   Math.floor(2  / Math.pow(10, 1)) % 10  ->  Math.floor(2  / 10) % 10  ->  0\n        sequenceOffset = 10)  Math.floor(10 / Math.pow(10, 1)) % 10  ->  Math.floor(10 / 10) % 10  ->  1\n        sequenceOffset = 12)  Math.floor(12 / Math.pow(10, 1)) % 10  ->  Math.floor(12 / 10) % 10  ->  1\n\n        for second # sign charIndex = 1\n        sequenceOffset = 0)   Math.floor(0  / Math.pow(10, 0)) % 10  ->  Math.floor(0  / 1) % 10   ->  0\n        sequenceOffset = 2)   Math.floor(2  / Math.pow(10, 0)) % 10  ->  Math.floor(2  / 1) % 10   ->  2\n        sequenceOffset = 10)  Math.floor(10 / Math.pow(10, 0)) % 10  ->  Math.floor(10 / 1) % 10   ->  0\n        sequenceOffset = 12)  Math.floor(12 / Math.pow(10, 0)) % 10  ->  Math.floor(12 / 1) % 10   ->  2\n    */\n    function sequenceElem(config, sequenceOffset, charIndex) {\n        return config.unique_charset[Math.floor(sequenceOffset / Math.pow(config.unique_charset.length, config.length - charIndex - 1)) % config.unique_charset.length];\n    }\n\n    function charset(name) {\n        var charsets = {\n            numbers: \"0123456789\",\n            alphabetic: \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n            alphanumeric: \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n        };\n        return charsets[name];\n    }\n\n    function repeat(str, count) {\n        var res = \"\";\n        for (var i = 0; i < count; i++) {\n            res += str;\n        }\n        return res;\n    }\n\n    function Config(config) {\n        config = config || {};\n        this.count = config.count || 1;\n        this.length = config.length || 8;\n        this.charset = config.charset || charset(\"alphanumeric\");\n        this.unique_charset = uniqueCharset(this.charset);\n        this.prefix = config.prefix || \"\";\n        this.postfix = config.postfix || \"\";\n        this.pattern = config.pattern || repeat(\"#\", this.length);\n\n        if (config.pattern) {\n            this.length = (config.pattern.match(/#/g) || []).length;\n        }\n    }\n\n    function uniqueCharset(charset) {\n        var map = {};\n        var result = [];\n\n        for (var i = 0; i < charset.length; i++) {\n            const sign = charset[i];\n\n            if (!map[sign]) {\n                result.push(sign);\n                map[sign] = true;\n            }\n        }\n\n        return result.join(\"\");\n    }\n\n    function generateOne(config, sequenceOffset) {\n        var generateIndex = 0;\n\n        var code = config.pattern.split('').map(function(char) {\n            if (char === '#') {\n                if (isNaN(sequenceOffset)) {\n                    return randomElem(config.charset);\n                }\n                return sequenceElem(config, sequenceOffset, generateIndex++);\n            } else {\n                return char;\n            }\n        }).join('');\n        return config.prefix + code + config.postfix;\n    }\n\n    function maxCombinationsCount (config) {\n        return Math.pow(config.unique_charset.length, config.length);\n    }\n\n    function isFeasible(config) {\n        return maxCombinationsCount(config) >= config.count;\n    }\n\n    function generate(config, sequenceOffset) {\n        config = new Config(config);\n        var count = config.count;\n\n        if (!isFeasible(config)) {\n            throw new Error(\"Not possible to generate requested number of codes.\");\n        }\n\n        sequenceOffset = +sequenceOffset;\n\n        if (!isNaN(sequenceOffset)) {\n            if (sequenceOffset < 0) {\n                sequenceOffset = 0;\n            } else if (sequenceOffset >= maxCombinationsCount(config)) {\n                sequenceOffset = maxCombinationsCount(config) - 1;\n            }\n        }\n\n        var map = {};\n        var codes = [];\n\n        while (count > 0) {\n            var code = generateOne(config, sequenceOffset);\n\n            if (!map[code]) {\n                codes.push(code);\n                map[code] = true;\n                count--;\n            }\n\n            sequenceOffset++;\n        }\n\n        return codes;\n    }\n\n    var voucher_codes = {\n        generate: generate,\n        charset: charset\n    };\n\n    if (typeof exports !== 'undefined') {\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = voucher_codes;\n        }\n        exports = voucher_codes;\n    } else {\n        root.voucher_codes = voucher_codes;\n    }\n}).call(this);\n"],
  "mappings": "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",
  "names": ["charset"]
}
